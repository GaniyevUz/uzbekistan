name: Uzbekistan CI/CD Pipeline

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - master

jobs:
  lint:
    runs-on: ubuntu-latest
    if: github.event.head_commit.author.email != 'action@github.com'
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.REPO_TOKEN }}
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black mypy bandit
      
      - name: Format code style with black
        run: black uzbekistan
      
      - name: Commit and push if changed
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -u
          git diff --quiet && git diff --staged --quiet || (git commit -m "style: format code with black" && git push)
        env:
          REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
      
      - name: Security check
        run: bandit -r uzbekistan

  test:
    needs: lint
    runs-on: ubuntu-latest
    if: github.event.head_commit.author.email != 'action@github.com'
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.REPO_TOKEN }}
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e ".[dev]"
          pip install pytest pytest-cov pytest-xdist coverage
      
      - name: Run tests with coverage
        run: |
          python -m pytest uzbekistan/tests/ -v --cov=uzbekistan --cov-report=xml -n auto
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

  publish:
    needs: test
    if: startsWith(github.ref, 'refs/tags/v') && github.event.head_commit.author.email != 'action@github.com'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.REPO_TOKEN }}
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine tomli tomli-w
      
      - name: Update version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          python scripts/update_version.py $VERSION
      
      - name: Build package
        run: python -m build
      
      - name: Check package
        run: twine check dist/*
      
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine upload dist/* 